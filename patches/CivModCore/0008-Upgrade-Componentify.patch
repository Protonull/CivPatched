From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Alexander <protonull@protonmail.com>
Date: Sat, 13 May 2023 10:18:51 +0100
Subject: [PATCH] Upgrade Componentify

The way components were made and appended to was really inefficient.

diff --git a/src/main/java/vg/civcraft/mc/civmodcore/chat/Componentify.java b/src/main/java/vg/civcraft/mc/civmodcore/chat/Componentify.java
index 8a5b98559fe289b61373b2af3140d45146d0f0f4..d0b2a6f3c422f47ed37154c680102c77a3fdaca3 100644
--- a/src/main/java/vg/civcraft/mc/civmodcore/chat/Componentify.java
+++ b/src/main/java/vg/civcraft/mc/civmodcore/chat/Componentify.java
@@ -1,69 +1,88 @@
 package vg.civcraft.mc.civmodcore.chat;
 
-import javax.annotation.Nonnull;
 import lombok.experimental.UtilityClass;
 import net.kyori.adventure.text.Component;
 import net.kyori.adventure.text.event.HoverEvent;
 import net.kyori.adventure.text.format.NamedTextColor;
 import org.bukkit.Location;
+import org.jetbrains.annotations.NotNull;
 
+/**
+ * @author CivPatched
+ */
 @UtilityClass
-public final class Componentify {
+public class Componentify {
 
-	private static Component INTERNAL_addLocationWorld(final Location location) {
+	private @NotNull Component INTERNAL_addLocationWorld(final @NotNull Location location) {
 		if (location.isWorldLoaded()) {
-			return Component.text(location.getWorld().getName())
-					.hoverEvent(HoverEvent.showText(Component.text("World name")));
+			return Component.text()
+					.content(location.getWorld().getName())
+					.hoverEvent(HoverEvent.showText(Component.text("World name")))
+					.build();
 		}
 		else {
-			return Component.text("<null>")
+			return Component.text()
+					.content("<null>")
 					.color(NamedTextColor.RED)
-					.hoverEvent(HoverEvent.showText(Component.text("World not specified / loaded")));
+					.hoverEvent(HoverEvent.showText(Component.text("World not specified / loaded")))
+					.build();
 		}
 	}
 
-	public static Component fullLocation(@Nonnull final Location location) {
-		final var component = Component.text();
-		component.append(INTERNAL_addLocationWorld(location));
-		component.append(Component.space());
-		component.append(Component.text(location.getX())
-				.color(NamedTextColor.RED)
-				.hoverEvent(HoverEvent.showText(Component.text("X"))));
-		component.append(Component.space());
-		component.append(Component.text(location.getY())
-				.color(NamedTextColor.GREEN)
-				.hoverEvent(HoverEvent.showText(Component.text("Y"))));
-		component.append(Component.space());
-		component.append(Component.text(location.getZ())
-				.color(NamedTextColor.BLUE)
-				.hoverEvent(HoverEvent.showText(Component.text("Z"))));
-		component.append(Component.space());
-		component.append(Component.text(location.getYaw())
-				.color(NamedTextColor.GOLD)
-				.hoverEvent(HoverEvent.showText(Component.text("Yaw"))));
-		component.append(Component.space());
-		component.append(Component.text(location.getPitch())
-				.color(NamedTextColor.AQUA)
-				.hoverEvent(HoverEvent.showText(Component.text("Pitch"))));
-		return component.build();
+	public @NotNull Component fullLocation(final @NotNull Location location) {
+		return Component.text()
+				.append(
+						INTERNAL_addLocationWorld(location),
+						Component.space(),
+						Component.text()
+								.content(Double.toString(location.getX()))
+								.color(NamedTextColor.RED)
+								.hoverEvent(HoverEvent.showText(Component.text("X"))),
+						Component.space(),
+						Component.text()
+								.content(Double.toString(location.getY()))
+								.color(NamedTextColor.GREEN)
+								.hoverEvent(HoverEvent.showText(Component.text("Y"))),
+						Component.space(),
+						Component.text()
+								.content(Double.toString(location.getZ()))
+								.color(NamedTextColor.BLUE)
+								.hoverEvent(HoverEvent.showText(Component.text("Z"))),
+						Component.space(),
+						Component.text()
+								.content(Float.toString(location.getYaw()))
+								.color(NamedTextColor.GOLD)
+								.hoverEvent(HoverEvent.showText(Component.text("Yaw"))),
+						Component.space(),
+						Component.text()
+								.content(Float.toString(location.getPitch()))
+								.color(NamedTextColor.AQUA)
+								.hoverEvent(HoverEvent.showText(Component.text("Pitch")))
+				)
+				.build();
 	}
 
-	public static Component blockLocation(@Nonnull final Location location) {
-		final var component = Component.text();
-		component.append(INTERNAL_addLocationWorld(location));
-		component.append(Component.space());
-		component.append(Component.text(location.getBlockX())
-				.color(NamedTextColor.RED)
-				.hoverEvent(HoverEvent.showText(Component.text("Block X"))));
-		component.append(Component.space());
-		component.append(Component.text(location.getBlockY())
-				.color(NamedTextColor.GREEN)
-				.hoverEvent(HoverEvent.showText(Component.text("Block X"))));
-		component.append(Component.space());
-		component.append(Component.text(location.getBlockZ())
-				.color(NamedTextColor.BLUE)
-				.hoverEvent(HoverEvent.showText(Component.text("Block X"))));
-		return component.build();
+	public @NotNull Component blockLocation(final @NotNull Location location) {
+		return Component.text()
+				.append(
+						INTERNAL_addLocationWorld(location),
+						Component.space(),
+						Component.text()
+								.content(Double.toString(location.getBlockX()))
+								.color(NamedTextColor.RED)
+								.hoverEvent(HoverEvent.showText(Component.text("Block X"))),
+						Component.space(),
+						Component.text()
+								.content(Double.toString(location.getBlockY()))
+								.color(NamedTextColor.GREEN)
+								.hoverEvent(HoverEvent.showText(Component.text("Block Y"))),
+						Component.space(),
+						Component.text()
+								.content(Double.toString(location.getBlockZ()))
+								.color(NamedTextColor.BLUE)
+								.hoverEvent(HoverEvent.showText(Component.text("Block Z")))
+				)
+				.build();
 	}
 
 }
