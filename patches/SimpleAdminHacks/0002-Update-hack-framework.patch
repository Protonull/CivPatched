From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Alexander <protonull@protonmail.com>
Date: Sat, 13 May 2023 05:27:00 +0100
Subject: [PATCH] Update hack framework

Allow all hacks to register themselves as event listeners.

All hacks now implement Deferrable.

Update and encapsulate BroadcastLevel.

diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/SimpleAdminHacks.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/SimpleAdminHacks.java
index 1f2715ce590d7d7db2c06e2543e6cc737e3d23d4..4f3c0bb2b30f5ddc6baf796e8d5b5c85149f8a5c 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/SimpleAdminHacks.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/SimpleAdminHacks.java
@@ -3,11 +3,8 @@ package com.programmerdan.minecraft.simpleadminhacks;
 import com.programmerdan.minecraft.simpleadminhacks.framework.HackManager;
 import com.programmerdan.minecraft.simpleadminhacks.framework.commands.CommandRegistrar;
 import java.util.logging.Level;
-import org.bukkit.Bukkit;
-import org.bukkit.OfflinePlayer;
 import org.bukkit.command.CommandExecutor;
 import org.bukkit.command.PluginCommand;
-import org.bukkit.entity.Player;
 import vg.civcraft.mc.civmodcore.ACivMod;
 
 /**
@@ -141,38 +138,4 @@ public class SimpleAdminHacks extends ACivMod {
 		return this.getServer().getPluginManager().isPluginEnabled(pluginName);
 	}
 
-	@Deprecated
-	public int serverBroadcast(String message) {
-		return this.getServer().broadcast(message, config().getBroadcastPermission());
-	}
-
-	@Deprecated
-	public int serverOperatorBroadcast(String message) {
-		int cnt = 0;
-		for(OfflinePlayer op : Bukkit.getOperators()) {
-			if (op.isOnline() && op.getPlayer() != null) {
-				op.getPlayer().sendMessage(message);
-				cnt ++;
-			}
-		}
-		return cnt;
-	}
-
-	@Deprecated
-	public int serverOnlineBroadcast(String message) {
-		int cnt = 0;
-		for (Player p : Bukkit.getOnlinePlayers()) {
-			if (p != null && p.isOnline()) {
-				p.sendMessage(message);
-				cnt ++;
-			}
-		}
-		return cnt;
-	}
-
-	@Deprecated
-	public void serverSendConsoleMessage(String message) {
-		Bukkit.getConsoleSender().sendMessage(message);
-	}
-
 }
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/BasicHack.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/BasicHack.java
index aa764902a25c93aa3260a900542bc7a790656f78..68f4f1a47bc72d139ddb97914083e4d8b9694c12 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/BasicHack.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/BasicHack.java
@@ -2,7 +2,6 @@ package com.programmerdan.minecraft.simpleadminhacks.framework;
 
 import com.programmerdan.minecraft.simpleadminhacks.SimpleAdminHacks;
 import org.bukkit.configuration.ConfigurationSection;
-import org.bukkit.event.HandlerList;
 import org.bukkit.event.Listener;
 
 public abstract class BasicHack extends SimpleHack<BasicHackConfig> implements Listener {
@@ -11,18 +10,6 @@ public abstract class BasicHack extends SimpleHack<BasicHackConfig> implements L
 		super(plugin, config);
 	}
 
-	// REMEMBER TO CALL SUPER
-	@Override
-	public void onEnable() {
-		plugin().registerListener(this);
-	}
-
-	// REMEMBER TO CALL SUPER
-	@Override
-	public void onDisable() {
-		HandlerList.unregisterAll(this);
-	}
-
 	// YOU DON'T HAVE TO COPY THIS! It's inherited.
 	public static BasicHackConfig generate(final SimpleAdminHacks plugin, final ConfigurationSection config) {
 		return new BasicHackConfig(plugin, config);
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/SimpleHack.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/SimpleHack.java
index 068fa2267adcc048da200d16514e9349f09e09be..cee98248eb58f7f3c34d6e4a904b46657829fd26 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/SimpleHack.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/SimpleHack.java
@@ -15,22 +15,32 @@ import org.bukkit.configuration.ConfigurationSection;
 import org.bukkit.util.NumberConversions;
 import vg.civcraft.mc.civmodcore.utilities.CivLogger;
 
+// CivPatched Start
+import org.bukkit.event.HandlerList;
+import org.bukkit.event.Listener;
+import org.jetbrains.annotations.NotNull;
+import vg.civcraft.mc.civmodcore.utilities.defer.Deferrable;
+import vg.civcraft.mc.civmodcore.utilities.defer.DeferredFunctions;
+// CivPatched End
+
 /**
  * Baseline structure for a managed hack.
  *
  * @author ProgrammerDan
  */
-public abstract class SimpleHack<T extends SimpleHackConfig> {
+public abstract class SimpleHack<T extends SimpleHackConfig> implements Deferrable { // CivPatched: Implement Deferrable
 
 	protected final CivLogger logger;
 	protected final SimpleAdminHacks plugin;
 	protected final T config;
 	private boolean enabled;
+	private final DeferredFunctions deferredFunctions; // CivPatched
 
 	public SimpleHack(final SimpleAdminHacks plugin, final T config) {
 		this.logger = CivLogger.getLogger(getClass());
 		this.plugin = Objects.requireNonNull(plugin, "Plugin cannot be null!");
 		this.config = Objects.requireNonNull(config, "Config cannot be null!");
+		this.deferredFunctions = new DeferredFunctions(plugin, this.logger); // CivPatched
 	}
 
 	public final SimpleAdminHacks plugin() {
@@ -41,6 +51,13 @@ public abstract class SimpleHack<T extends SimpleHackConfig> {
 		return this.config;
 	}
 
+	// CivPatched Start
+	@Override
+	public @NotNull DeferredFunctions getDeferredFunctions() {
+		return this.deferredFunctions;
+	}
+	// CivPatched End
+
 	public final String getName() {
 		return getClass().getSimpleName();
 	}
@@ -72,6 +89,7 @@ public abstract class SimpleHack<T extends SimpleHackConfig> {
 		unregisterCommands();
 		dataCleanup();
 		onDisable();
+		this.deferredFunctions.UNSAFE_run(); // CivPatched
 		this.config.setEnabled(false); // Needed for legacy hacks that rely on their config for current states
 		this.enabled = false;
 		this.plugin.info(ChatColor.AQUA + getName() + " disabled!");
@@ -85,13 +103,23 @@ public abstract class SimpleHack<T extends SimpleHackConfig> {
 	/**
 	 * Called when this hack is enabled.
 	 */
-	public void onEnable() { }
+	public void onEnable() {
+		// CivPatched Start
+		if (this instanceof Listener) {
+			plugin().registerListener((Listener) this);
+		}
+		// CivPatched End
+	}
 
 	/**
 	 * Called when this hack is disabled.
 	 */
 	public void onDisable() {
-
+		// CivPatched Start
+		if (this instanceof Listener) {
+			HandlerList.unregisterAll((Listener) this);
+		}
+		// CivPatched End
 	}
 
 	/**
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/utilities/BroadcastLevel.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/utilities/BroadcastLevel.java
index 68490f4bdca523cbf1a53ad01c2ab1c6e36666bf..c68cf47ff19386c1d7b42e06d69e07a36392613a 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/utilities/BroadcastLevel.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/utilities/BroadcastLevel.java
@@ -1,13 +1,83 @@
 package com.programmerdan.minecraft.simpleadminhacks.framework.utilities;
 
+// CivPatched Start
+import com.programmerdan.minecraft.simpleadminhacks.SimpleAdminHacks;
+import java.util.Objects;
+import net.kyori.adventure.text.Component;
+import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer;
+import org.bukkit.Bukkit;
+import org.bukkit.OfflinePlayer;
+import org.bukkit.entity.Player;
+import org.jetbrains.annotations.NotNull;
+// CivPatched End
+
 /**
  * Various Broadcast targets
  * 
  * @author ProgrammerDan
- */
 public enum BroadcastLevel {
 	OP,
 	PERM,
 	CONSOLE,
 	ALL
 }
+*/ // CivPatched Start
+public enum BroadcastLevel {
+
+	OP {
+		@Override
+		public int sendMessage(final @NotNull Component message) {
+			return (int) Bukkit.getOperators()
+					.stream()
+					.map(OfflinePlayer::getPlayer)
+					.filter(Objects::nonNull)
+					.peek((final Player player) -> player.sendMessage(message))
+					.count();
+		}
+	},
+
+	PERM {
+		@Override
+		public int sendMessage(final @NotNull Component message) {
+			return Bukkit.broadcast(message, SimpleAdminHacks.instance().config().getBroadcastPermission());
+		}
+	},
+
+	CONSOLE {
+		@Override
+		public int sendMessage(final @NotNull Component message) {
+			Bukkit.getConsoleSender().sendMessage(message);
+			return 1;
+		}
+	},
+
+	ALL {
+		@Override
+		public int sendMessage(final @NotNull Component message) {
+			return Bukkit.broadcast(message);
+		}
+	};
+
+	/**
+	 * Sends a message to the intended targets.
+	 *
+	 * @param message The message to send.
+	 * @return Returns how many recipients received the message.
+	 */
+	public abstract int sendMessage(final @NotNull Component message);
+
+	/**
+	 * Sends a message to the intended targets.
+	 *
+	 * @param message The message to send.
+	 * @return Returns how many recipients received the message.
+	 *
+	 * @deprecated Use {@link #sendMessage(Component)} instead.
+	 */
+	@Deprecated
+	public final int sendMessage(final @NotNull String message) {
+		return sendMessage(LegacyComponentSerializer.legacySection().deserialize(message));
+	}
+
+}
+// CivPatched End
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/BadBoyWatch.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/BadBoyWatch.java
index acd2386773a14590f855431ebc4a0ece582abf0b..4f20dda7412f3a36d44fa067f649ec118cfd3cc3 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/BadBoyWatch.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/BadBoyWatch.java
@@ -100,24 +100,12 @@ public class BadBoyWatch extends SimpleHack<BadBoyWatchConfig> implements Listen
 		}
 	}
 
-	@Override
-	public void registerListeners() {
-		if (config.isEnabled()) {
-			plugin().log("Registering BadBoyWatcher listener");
-			plugin().registerListener(this);
-		}
-	}
-
 	@Override
 	public void dataBootstrap() {
 		boys = new ConcurrentHashMap<>();
 		lowBoys = new ConcurrentHashMap<>();
 	}
 
-	@Override
-	public void unregisterListeners() {
-	}
-
 	@Override
 	public void unregisterCommands() {
 	}
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/CTAnnounce.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/CTAnnounce.java
index 6060f252a0ddc3b918d6adad744052c88db644d1..70ba43cb7db7aa7bc9b236a821c7cc204741b909 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/CTAnnounce.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/CTAnnounce.java
@@ -57,20 +57,7 @@ public class CTAnnounce extends SimpleHack<CTAnnounceConfig> implements Listener
 		// Overlap is possible. Some people might get double-notified
 		for (BroadcastLevel level : config.getBroadcast()) {
 			plugin().debug("  Broadcast to {0}", level);
-			switch(level) {
-			case OP:
-				plugin().serverOperatorBroadcast(cleanMessage);
-				break;
-			case PERM:
-				plugin().serverBroadcast(cleanMessage); 
-				break;
-			case CONSOLE:
-				plugin().serverSendConsoleMessage(cleanMessage);
-				break;
-			case ALL:
-				plugin().serverOnlineBroadcast(cleanMessage);
-				break;
-			}
+			level.sendMessage(cleanMessage); // CivPatched
 		}
 	}
 
@@ -82,14 +69,6 @@ public class CTAnnounce extends SimpleHack<CTAnnounceConfig> implements Listener
 				);
 	}
 
-	@Override
-	public void registerListeners() {
-		if (config.isEnabled()) {
-			plugin().log("Registering CombatTagEvent listener");
-			plugin().registerListener(this);
-		}
-	}
-
 	@Override
 	public void registerCommands() {
 	}
@@ -99,10 +78,6 @@ public class CTAnnounce extends SimpleHack<CTAnnounceConfig> implements Listener
 		lastCTAnnounce = new ConcurrentHashMap<>();
 	}
 
-	@Override
-	public void unregisterListeners() {
-	}
-
 	@Override
 	public void unregisterCommands() {
 	}
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/DisableAI.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/DisableAI.java
index cd524a0708846deb863e28fa2fec24ab23fb3c50..088589b7c671320e92ce19b1499a4414249528cf 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/DisableAI.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/DisableAI.java
@@ -10,7 +10,6 @@ import org.bukkit.craftbukkit.v1_18_R2.persistence.CraftPersistentDataContainer;
 import org.bukkit.entity.LivingEntity;
 import org.bukkit.event.EventHandler;
 import org.bukkit.event.EventPriority;
-import org.bukkit.event.HandlerList;
 import org.bukkit.event.Listener;
 
 public final class DisableAI extends SimpleHack<DisableAIConfig> implements Listener {
@@ -25,14 +24,9 @@ public final class DisableAI extends SimpleHack<DisableAIConfig> implements List
 		return new DisableAIConfig(plugin, config);
 	}
 
-	@Override
-	public void onEnable() {
-		plugin().registerListener(this);
-	}
-
 	@Override
 	public void onDisable() {
-		HandlerList.unregisterAll(this);
+		super.onDisable(); // CivPatched
 		config().reset();
 	}
 
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/ElytraFeatures.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/ElytraFeatures.java
index 08e7d58a004a61d76e48ba562dd0d4cc420b5ec5..21d2aaf6083a9e862d61b579edc266263f253868 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/ElytraFeatures.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/ElytraFeatures.java
@@ -15,7 +15,6 @@ import org.bukkit.configuration.ConfigurationSection;
 import org.bukkit.entity.Entity;
 import org.bukkit.entity.Player;
 import org.bukkit.event.EventHandler;
-import org.bukkit.event.HandlerList;
 import org.bukkit.event.Listener;
 import org.bukkit.event.entity.EntityToggleGlideEvent;
 import org.bukkit.event.player.PlayerMoveEvent;
@@ -35,16 +34,6 @@ public final class ElytraFeatures extends SimpleHack<ElytraFeaturesConfig> imple
 		return new ElytraFeaturesConfig(plugin, config);
 	}
 
-	@Override
-	public void onEnable() {
-		plugin().registerListener(this);
-	}
-
-	@Override
-	public void onDisable() {
-		HandlerList.unregisterAll(this);
-	}
-
 	private boolean INTERNAL_hasBypassPermission(final Entity entity) {
 		return entity instanceof Player && entity.hasPermission("simpleadmin.elytrabypass");
 	}
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/Experimental.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/Experimental.java
index 114847b519f037516d779b2dd633f2846a725965..4238121dfc96c65af79a9539b576d1ad08ac9df9 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/Experimental.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/Experimental.java
@@ -29,14 +29,6 @@ public class Experimental extends SimpleHack<ExperimentalConfig> implements List
 		super(plugin, config);
 	}
 
-	@Override
-	public void registerListeners() {
-		if (config.isEnabled()) {
-			plugin().log("Registering experimental listeners");
-			plugin().registerListener(this);
-		}
-	}
-
 	@Override
 	public void registerCommands() {
 		if (config.isEnabled()) {
@@ -49,10 +41,6 @@ public class Experimental extends SimpleHack<ExperimentalConfig> implements List
 	public void dataBootstrap() {
 	}
 
-	@Override
-	public void unregisterListeners() {
-	}
-
 	@Override
 	public void unregisterCommands() {
 	}
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/GameFeatures.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/GameFeatures.java
index f98874d1ce76c0cc9256f6bfbbabe0a7941d57e9..07731cd5218be1d2c5b002d644a993c096090057 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/GameFeatures.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/GameFeatures.java
@@ -75,19 +75,6 @@ public class GameFeatures extends SimpleHack<GameFeaturesConfig> implements List
 		super(plugin, config);
 	}
 
-	@Override
-	public void registerListeners() {
-		if (config != null && config.isEnabled()) {
-			plugin().log("Registering GameFeatures listeners");
-			plugin().registerListener(this);
-		}
-	}
-
-	@Override
-	public void unregisterListeners() {
-		// Bukkit does this for us.
-	}
-
 	@Override
 	public void registerCommands() {
 	}
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/GameFixes.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/GameFixes.java
index e068e46fda8406fb2a8bb6868c503823419bd4c5..2db25bddba85a9b523ac336fc22b9bf66661e1e4 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/GameFixes.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/GameFixes.java
@@ -22,7 +22,6 @@ import org.bukkit.configuration.ConfigurationSection;
 import org.bukkit.entity.Player;
 import org.bukkit.event.EventHandler;
 import org.bukkit.event.EventPriority;
-import org.bukkit.event.HandlerList;
 import org.bukkit.event.Listener;
 import org.bukkit.event.block.Action;
 import org.bukkit.event.block.BlockBreakEvent;
@@ -54,17 +53,11 @@ public class GameFixes extends SimpleHack<GameFixesConfig> implements Listener {
 
 	@Override
 	public void onDisable() {
+		super.onDisable(); // CivPatched
 		this.protocol.removeAllAdapters();
-		HandlerList.unregisterAll(this);
 		super.onDisable();
 	}
 
-	@Override
-	public void onEnable() {
-		Bukkit.getPluginManager().registerEvents(this, plugin);
-		super.onEnable();
-	}
-
 	@Override
 	public String status() {
 		StringBuilder genStatus = new StringBuilder();
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/GameTuning.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/GameTuning.java
index 459adcec1d70420a1d2236d885470fcfd10dd291..2ea1f88de1fea2dc803b0b0b5dc7f4a8b231107f 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/GameTuning.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/GameTuning.java
@@ -75,19 +75,6 @@ public class GameTuning extends SimpleHack<GameTuningConfig> implements Listener
 		super(plugin, config);
 	}
 
-	@Override
-	public void registerListeners() {
-		if (config != null && config.isEnabled()) {
-			plugin().log("Registering GameTuning listeners");
-			plugin().registerListener(this);
-		}
-	}
-
-	@Override
-	public void unregisterListeners() {
-		// Bukkit does this for us.
-	}
-
 	@Override
 	public void registerCommands() {
 		if (config.isEnabled()) {
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/HorseStats.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/HorseStats.java
index 9302f8efd0c5cebb20e249de99fdd7e30a378ac1..0b4bd13a1e6fb49c99357cc2cf2e90a8e06c22f6 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/HorseStats.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/HorseStats.java
@@ -54,14 +54,6 @@ public class HorseStats extends SimpleHack<HorseStatsConfig> implements Listener
 		}
 	}
 
-	@Override
-	public void registerListeners() {
-		if (config.isEnabled()) {
-			plugin().log("Registering HorseStats listeners");
-			plugin().registerListener(this);
-		}
-	}
-
 	@Override
 	public void registerCommands() {
 
@@ -72,11 +64,6 @@ public class HorseStats extends SimpleHack<HorseStatsConfig> implements Listener
 
 	}
 
-	@Override
-	public void unregisterListeners() {
-
-	}
-
 	@Override
 	public void unregisterCommands() {
 
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/Insight.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/Insight.java
index 146573472710ec340dce385c23f1fad34ef65829..51511004db8b809a730396d901657bb0a7d836e3 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/Insight.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/Insight.java
@@ -84,9 +84,6 @@ public class Insight extends SimpleHack<InsightConfig> implements CommandExecuto
 	@Override
 	public void registerListeners() {
 		if (config.isEnabled()) {
-			plugin().log("Registering Insight reordering hack");
-			plugin().registerListener(this);
-
 			plugin().log("Registering Insight event instrumentations");
 
 			if (config.getInsightOn() == null) {
@@ -236,10 +233,6 @@ public class Insight extends SimpleHack<InsightConfig> implements CommandExecuto
 		}
 	}
 
-	@Override
-	public void unregisterListeners() {
-	}
-
 	@Override
 	public void unregisterCommands() {
 	}
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/Introbook.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/Introbook.java
index 9f90049e6165feac1ff4492d87d26c12d65f30fa..f1df582d907f48e9c1db7b38958d8dec317970af 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/Introbook.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/Introbook.java
@@ -42,14 +42,6 @@ public class Introbook extends SimpleHack<IntrobookConfig> implements Listener,
 		super(plugin, config);
 	}
 
-	@Override
-	public void registerListeners() {
-		if (config.isEnabled()) {
-			plugin().log("Registering various Introbook listeners");
-			plugin().registerListener(this);
-		}
-	}
-
 	@Override
 	public void registerCommands() {
 		if (config.isEnabled()) {
@@ -63,10 +55,6 @@ public class Introbook extends SimpleHack<IntrobookConfig> implements Listener,
 		hasBook = new HashSet<UUID>();
 	}
 
-	@Override
-	public void unregisterListeners() {
-	}
-
 	@Override
 	public void unregisterCommands() {
 	}
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/InvControl.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/InvControl.java
index 50c6ca89578b94967ee41cf8242f6b2f359082c2..db16174796490e33e3648275f9b6cd7444baa384 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/InvControl.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/InvControl.java
@@ -171,11 +171,6 @@ public class InvControl extends SimpleHack<InvControlConfig> implements CommandE
 		}
 	}
 
-	@Override
-	public void registerListeners() {
-
-	}
-
 	@Override
 	public void registerCommands() {
 		if (config.isEnabled()) {
@@ -197,10 +192,6 @@ public class InvControl extends SimpleHack<InvControlConfig> implements CommandE
 		}
 	}
 
-	@Override
-	public void unregisterListeners() {
-	}
-
 	@Override
 	public void unregisterCommands() {
 	}
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/NewfriendAssist.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/NewfriendAssist.java
index ddf43e19ac819900d9a7a1053451b1fd712d77e5..ad046aae947f480988f3f7c0fbfe6de4046f2739 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/NewfriendAssist.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/NewfriendAssist.java
@@ -101,20 +101,7 @@ public class NewfriendAssist extends SimpleHack<NewfriendAssistConfig> implement
 			// Overlap is possible. Some people might get double-notified
 			for (BroadcastLevel level : config.getAnnounceBroadcast()) {
 				plugin().debug("  Broadcast to {0}", level);
-				switch(level) {
-				case OP:
-					plugin().serverOperatorBroadcast(cleanMessage);
-					break;
-				case PERM:
-					plugin().serverBroadcast(cleanMessage); 
-					break;
-				case CONSOLE:
-					plugin().serverSendConsoleMessage(cleanMessage);
-					break;
-				case ALL:
-					plugin().serverOnlineBroadcast(cleanMessage);
-					break;
-				}
+				level.sendMessage(cleanMessage); // CivPatched
 			}
 		}
 
@@ -167,14 +154,6 @@ public class NewfriendAssist extends SimpleHack<NewfriendAssistConfig> implement
 				);
 	}
 
-	@Override
-	public void registerListeners() {
-		if (config.isEnabled()) {
-			plugin().log("Registering PlayerJoin/Quit/KickEvent listener");
-			plugin().registerListener(this);
-		}
-	}
-
 	@Override
 	public void registerCommands() {
 		if (config.isEnabled()) {
@@ -189,10 +168,6 @@ public class NewfriendAssist extends SimpleHack<NewfriendAssistConfig> implement
 		this.newfriendSessionTime = new HashMap<>();
 	}
 
-	@Override
-	public void unregisterListeners() {
-	}
-
 	@Override
 	public void unregisterCommands() {
 	}
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/ReinforcedChestBreak.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/ReinforcedChestBreak.java
index dee661e621c7553086cfec2191831041626f914d..394a9e7b775ff832d809293f41596fd3a155e6e3 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/ReinforcedChestBreak.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/ReinforcedChestBreak.java
@@ -18,6 +18,10 @@ import org.bukkit.event.block.BlockBreakEvent;
 import vg.civcraft.mc.citadel.Citadel;
 import vg.civcraft.mc.citadel.ReinforcementManager;
 
+// CivPatched Start
+import com.programmerdan.minecraft.simpleadminhacks.framework.utilities.BroadcastLevel;
+// CivPatched End
+
 /**
  * Sends every 3 minutes a message to the admins if a chest is broken
  */
@@ -37,14 +41,6 @@ public class ReinforcedChestBreak extends SimpleHack<ReinforcedChestBreakConfig>
 		return new ReinforcedChestBreakConfig(plugin, config);
 	}
 
-    @Override
-    public void registerListeners() {
-    	if (!config.isEnabled()) {
-    		return;
-    	}
-        Bukkit.getPluginManager().registerEvents(this, plugin());
-    }
-
     @Override
     public void registerCommands() {}
 
@@ -61,9 +57,6 @@ public class ReinforcedChestBreak extends SimpleHack<ReinforcedChestBreakConfig>
         Bukkit.getScheduler().runTaskTimer(plugin(), messenger, 0, config.getDelay() * 20);
     }
 
-    @Override
-    public void unregisterListeners() {}
-
     @Override
     public void unregisterCommands() {}
 
@@ -149,7 +142,7 @@ public class ReinforcedChestBreak extends SimpleHack<ReinforcedChestBreakConfig>
         @Override
         public void run() {
             for (String message: messages) {
-                plugin().serverOperatorBroadcast(message);
+				BroadcastLevel.OP.sendMessage(message); // CivPatched
             }
             messages.clear();
         }
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/SanityHack.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/SanityHack.java
index 47ed60ee4a493d2961a9431f4ae3b3162368d1da..11ac5609d0c1762ed1466dc84d5450fcd7d37e3d 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/SanityHack.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/SanityHack.java
@@ -62,14 +62,6 @@ public class SanityHack extends SimpleHack<SanityHackConfig> implements Listener
 		}
 	}
 
-	@Override
-	public void registerListeners() {
-		if (config.isEnabled()) {
-			plugin().log("Registering SanityHack listeners");
-			plugin().registerListener(this);
-		}
-	}
-
 	@Override
 	public void registerCommands() {
 	}
@@ -79,10 +71,6 @@ public class SanityHack extends SimpleHack<SanityHackConfig> implements Listener
 		caughtPlayers = 0;
 	}
 
-	@Override
-	public void unregisterListeners() {
-	}
-
 	@Override
 	public void unregisterCommands() {
 	}
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/SaplingHack.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/SaplingHack.java
index 021531a09ae1a5e36102092b2de8ef9746fb8307..8a34279790af08b6aa8b32ccabc176f1927868d4 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/SaplingHack.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/SaplingHack.java
@@ -22,12 +22,6 @@ public class SaplingHack extends SimpleHack<SaplingConfig> implements Listener {
 		super(plugin, config);
 	}
 
-	@Override
-	public void onEnable() {
-		super.onEnable();
-		this.plugin.registerListener(this);
-	}
-
 	@EventHandler
 	public void onBlockBreak(BlockBreakEvent event) {
 		Block brokenBlock = event.getBlock();
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/TimingsHack.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/TimingsHack.java
index ed2cc60f78b7221bb9c8f4c96b642831d9e97016..9751bcfe5e67b13354d758b86781d0b47562aa3a 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/TimingsHack.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/TimingsHack.java
@@ -328,14 +328,6 @@ public class TimingsHack extends SimpleHack<TimingsHackConfig> implements Listen
 		return true;
 	}
 
-	@Override
-	public void registerListeners() {
-		if (!config.isEnabled()) return;
-
-		plugin().log("Registering listeners");
-		plugin().registerListener(this);
-	}
-
 	@SuppressWarnings("deprecation")
 	@EventHandler(ignoreCancelled = true)
 	public void onMapInit(MapInitializeEvent event) {
@@ -576,10 +568,6 @@ public class TimingsHack extends SimpleHack<TimingsHackConfig> implements Listen
 		}
 	}
 
-	@Override
-	public void unregisterListeners() {
-	}
-
 	@Override
 	public void unregisterCommands() {
 	}
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/ToggleLamp.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/ToggleLamp.java
index 8ed7b8f548debbdef4d83db692497d0511ccdc54..9857d40c461b22e6c0d2499630a5fdb6e95fac63 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/ToggleLamp.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/ToggleLamp.java
@@ -83,14 +83,6 @@ public class ToggleLamp extends SimpleHack<ToggleLampConfig> implements Listener
 
 	}
 
-	@Override
-	public void registerListeners() {
-		if (config.isEnabled()) {
-			plugin().log("Registering ToggleLamp listeners");
-			plugin().registerListener(this);
-		}
-	}
-
 	@Override
 	public void registerCommands() {
 	}
@@ -100,10 +92,6 @@ public class ToggleLamp extends SimpleHack<ToggleLampConfig> implements Listener
 		rm = plugin().serverHasPlugin("Citadel") ? Citadel.getInstance().getReinforcementManager() : null;
 	}
 
-	@Override
-	public void unregisterListeners() {
-	}
-
 	@Override
 	public void unregisterCommands() {
 	}
