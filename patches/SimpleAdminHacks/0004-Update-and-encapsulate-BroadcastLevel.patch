From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Alexander <protonull@protonmail.com>
Date: Sat, 13 May 2023 05:27:00 +0100
Subject: [PATCH] Update and encapsulate BroadcastLevel


diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/SimpleAdminHacks.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/SimpleAdminHacks.java
index 6f0f622bc17739a282868860d5408fa5285fde6c..79f17b5c7d93b792cee23e7a661c4b3cdee71ff9 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/SimpleAdminHacks.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/SimpleAdminHacks.java
@@ -3,11 +3,8 @@ package com.programmerdan.minecraft.simpleadminhacks;
 import com.programmerdan.minecraft.simpleadminhacks.framework.HackManager;
 import com.programmerdan.minecraft.simpleadminhacks.framework.commands.CommandRegistrar;
 import java.util.logging.Level;
-import org.bukkit.Bukkit;
-import org.bukkit.OfflinePlayer;
 import org.bukkit.command.CommandExecutor;
 import org.bukkit.command.PluginCommand;
-import org.bukkit.entity.Player;
 import vg.civcraft.mc.civmodcore.ACivMod;
 
 /**
@@ -140,38 +137,4 @@ public class SimpleAdminHacks extends ACivMod {
 		return this.getServer().getPluginManager().isPluginEnabled(pluginName);
 	}
 
-	@Deprecated
-	public int serverBroadcast(String message) {
-		return this.getServer().broadcast(message, config().getBroadcastPermission());
-	}
-
-	@Deprecated
-	public int serverOperatorBroadcast(String message) {
-		int cnt = 0;
-		for(OfflinePlayer op : Bukkit.getOperators()) {
-			if (op.isOnline() && op.getPlayer() != null) {
-				op.getPlayer().sendMessage(message);
-				cnt ++;
-			}
-		}
-		return cnt;
-	}
-
-	@Deprecated
-	public int serverOnlineBroadcast(String message) {
-		int cnt = 0;
-		for (Player p : Bukkit.getOnlinePlayers()) {
-			if (p != null && p.isOnline()) {
-				p.sendMessage(message);
-				cnt ++;
-			}
-		}
-		return cnt;
-	}
-
-	@Deprecated
-	public void serverSendConsoleMessage(String message) {
-		Bukkit.getConsoleSender().sendMessage(message);
-	}
-
 }
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/utilities/BroadcastLevel.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/utilities/BroadcastLevel.java
index 68490f4bdca523cbf1a53ad01c2ab1c6e36666bf..c68cf47ff19386c1d7b42e06d69e07a36392613a 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/utilities/BroadcastLevel.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/utilities/BroadcastLevel.java
@@ -1,13 +1,83 @@
 package com.programmerdan.minecraft.simpleadminhacks.framework.utilities;
 
+// CivPatched Start
+import com.programmerdan.minecraft.simpleadminhacks.SimpleAdminHacks;
+import java.util.Objects;
+import net.kyori.adventure.text.Component;
+import net.kyori.adventure.text.serializer.legacy.LegacyComponentSerializer;
+import org.bukkit.Bukkit;
+import org.bukkit.OfflinePlayer;
+import org.bukkit.entity.Player;
+import org.jetbrains.annotations.NotNull;
+// CivPatched End
+
 /**
  * Various Broadcast targets
  * 
  * @author ProgrammerDan
- */
 public enum BroadcastLevel {
 	OP,
 	PERM,
 	CONSOLE,
 	ALL
 }
+*/ // CivPatched Start
+public enum BroadcastLevel {
+
+	OP {
+		@Override
+		public int sendMessage(final @NotNull Component message) {
+			return (int) Bukkit.getOperators()
+					.stream()
+					.map(OfflinePlayer::getPlayer)
+					.filter(Objects::nonNull)
+					.peek((final Player player) -> player.sendMessage(message))
+					.count();
+		}
+	},
+
+	PERM {
+		@Override
+		public int sendMessage(final @NotNull Component message) {
+			return Bukkit.broadcast(message, SimpleAdminHacks.instance().config().getBroadcastPermission());
+		}
+	},
+
+	CONSOLE {
+		@Override
+		public int sendMessage(final @NotNull Component message) {
+			Bukkit.getConsoleSender().sendMessage(message);
+			return 1;
+		}
+	},
+
+	ALL {
+		@Override
+		public int sendMessage(final @NotNull Component message) {
+			return Bukkit.broadcast(message);
+		}
+	};
+
+	/**
+	 * Sends a message to the intended targets.
+	 *
+	 * @param message The message to send.
+	 * @return Returns how many recipients received the message.
+	 */
+	public abstract int sendMessage(final @NotNull Component message);
+
+	/**
+	 * Sends a message to the intended targets.
+	 *
+	 * @param message The message to send.
+	 * @return Returns how many recipients received the message.
+	 *
+	 * @deprecated Use {@link #sendMessage(Component)} instead.
+	 */
+	@Deprecated
+	public final int sendMessage(final @NotNull String message) {
+		return sendMessage(LegacyComponentSerializer.legacySection().deserialize(message));
+	}
+
+}
+// CivPatched End
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/CTAnnounce.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/CTAnnounce.java
index 2966f8314e417ecfb1fbdae5afc9e7e3607cb821..70ba43cb7db7aa7bc9b236a821c7cc204741b909 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/CTAnnounce.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/CTAnnounce.java
@@ -57,20 +57,7 @@ public class CTAnnounce extends SimpleHack<CTAnnounceConfig> implements Listener
 		// Overlap is possible. Some people might get double-notified
 		for (BroadcastLevel level : config.getBroadcast()) {
 			plugin().debug("  Broadcast to {0}", level);
-			switch(level) {
-			case OP:
-				plugin().serverOperatorBroadcast(cleanMessage);
-				break;
-			case PERM:
-				plugin().serverBroadcast(cleanMessage); 
-				break;
-			case CONSOLE:
-				plugin().serverSendConsoleMessage(cleanMessage);
-				break;
-			case ALL:
-				plugin().serverOnlineBroadcast(cleanMessage);
-				break;
-			}
+			level.sendMessage(cleanMessage); // CivPatched
 		}
 	}
 
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/NewfriendAssist.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/NewfriendAssist.java
index a417ca2662102d37e2177f94ba65a0235eb14649..ad046aae947f480988f3f7c0fbfe6de4046f2739 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/NewfriendAssist.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/NewfriendAssist.java
@@ -101,20 +101,7 @@ public class NewfriendAssist extends SimpleHack<NewfriendAssistConfig> implement
 			// Overlap is possible. Some people might get double-notified
 			for (BroadcastLevel level : config.getAnnounceBroadcast()) {
 				plugin().debug("  Broadcast to {0}", level);
-				switch(level) {
-				case OP:
-					plugin().serverOperatorBroadcast(cleanMessage);
-					break;
-				case PERM:
-					plugin().serverBroadcast(cleanMessage); 
-					break;
-				case CONSOLE:
-					plugin().serverSendConsoleMessage(cleanMessage);
-					break;
-				case ALL:
-					plugin().serverOnlineBroadcast(cleanMessage);
-					break;
-				}
+				level.sendMessage(cleanMessage); // CivPatched
 			}
 		}
 
diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/ReinforcedChestBreak.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/ReinforcedChestBreak.java
index 9491f6b8257842b3285dde8f8198c38a6be5d03f..394a9e7b775ff832d809293f41596fd3a155e6e3 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/ReinforcedChestBreak.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/ReinforcedChestBreak.java
@@ -18,6 +18,10 @@ import org.bukkit.event.block.BlockBreakEvent;
 import vg.civcraft.mc.citadel.Citadel;
 import vg.civcraft.mc.citadel.ReinforcementManager;
 
+// CivPatched Start
+import com.programmerdan.minecraft.simpleadminhacks.framework.utilities.BroadcastLevel;
+// CivPatched End
+
 /**
  * Sends every 3 minutes a message to the admins if a chest is broken
  */
@@ -138,7 +142,7 @@ public class ReinforcedChestBreak extends SimpleHack<ReinforcedChestBreakConfig>
         @Override
         public void run() {
             for (String message: messages) {
-                plugin().serverOperatorBroadcast(message);
+				BroadcastLevel.OP.sendMessage(message); // CivPatched
             }
             messages.clear();
         }
