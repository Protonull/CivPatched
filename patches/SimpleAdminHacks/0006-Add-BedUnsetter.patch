From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Alexander <protonull@protonmail.com>
Date: Wed, 24 May 2023 00:15:37 +0100
Subject: [PATCH] Add BedUnsetter


diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/basic/BedUnsetter.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/basic/BedUnsetter.java
new file mode 100644
index 0000000000000000000000000000000000000000..fef23cb037c30d47c1646827addc2046106f3acf
--- /dev/null
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/hacks/basic/BedUnsetter.java
@@ -0,0 +1,63 @@
+package com.programmerdan.minecraft.simpleadminhacks.hacks.basic;
+
+import co.aikar.commands.BaseCommand;
+import co.aikar.commands.annotation.CommandAlias;
+import co.aikar.commands.annotation.CommandPermission;
+import co.aikar.commands.annotation.Description;
+import com.programmerdan.minecraft.simpleadminhacks.SimpleAdminHacks;
+import com.programmerdan.minecraft.simpleadminhacks.framework.BasicHack;
+import com.programmerdan.minecraft.simpleadminhacks.framework.BasicHackConfig;
+import net.kyori.adventure.text.Component;
+import net.kyori.adventure.text.format.NamedTextColor;
+import org.bukkit.entity.Player;
+import org.jetbrains.annotations.NotNull;
+import vg.civcraft.mc.civmodcore.commands.CommandManager;
+
+/**
+ * @author CivPatched
+ */
+public final class BedUnsetter extends BasicHack {
+
+	private final CommandManager commands;
+
+	public BedUnsetter(
+			final @NotNull SimpleAdminHacks plugin,
+			final @NotNull BasicHackConfig config
+	) {
+		super(plugin, config);
+		this.commands = new CommandManager(plugin()) {
+			@Override
+			public void registerCommands() {
+				registerCommand(new BedUnsetterCommand());
+			}
+		};
+	}
+
+	@Override
+	public void onEnable() {
+		super.onEnable();
+		this.commands.init();
+	}
+
+	@Override
+	public void onDisable() {
+		this.commands.reset();
+		super.onDisable();
+	}
+
+	@CommandPermission("simpleadmin.bedunsetter")
+	public static class BedUnsetterCommand extends BaseCommand {
+		@CommandAlias("unsetbed|gooutformilk")
+		@Description("Unsets your bed respawn location")
+		public void unsetBed(final Player sender) {
+			final var bedLocation = sender.getBedSpawnLocation();
+			if (bedLocation == null) {
+				sender.sendMessage(Component.text("You bed is not set.", NamedTextColor.GREEN));
+				return;
+			}
+			sender.setBedSpawnLocation(null);
+			sender.sendMessage(Component.text("You bed has been unset.", NamedTextColor.GREEN));
+		}
+	}
+
+}
diff --git a/src/main/resources/config.yml b/src/main/resources/config.yml
index 72325c6418311f9275d2e5f52e1ee72442b3ad0e..40bdea372ff89262ed46ac3c4a106051c9713103 100644
--- a/src/main/resources/config.yml
+++ b/src/main/resources/config.yml
@@ -81,6 +81,8 @@ hacks:
       - <gold>That <it>really<gold> hurt!
   BedLocator:
     enabled: true
+  BedUnsetter:
+    enabled: true
   BeeKeeping:
     enabled: true
     # Value between 0 and 1 that determines the percentage chance that a bee will replace
diff --git a/src/main/resources/plugin.yml b/src/main/resources/plugin.yml
index 2dc153533bf241ecd9f195f5c4ff3fd4b3ef5919..dad66fe0d2786d4387cfe831f4855d286df92434 100644
--- a/src/main/resources/plugin.yml
+++ b/src/main/resources/plugin.yml
@@ -113,6 +113,7 @@ permissions:
       simpleadmin.debugwand: true
       simpleadmin.bedlocator: true
       simpleadmin.elytrabypass: true
+      simpleadmin.bedunsetter: true
     simpleadmin.hacks:
       description: Allows control of the hacks and settings which simpleadminhacks supports
       default: op
@@ -161,3 +162,6 @@ permissions:
     simpleadmin.elytrabypass:
       description: Gives the ability to bypass elytra restrictions
       default: op
+    simpleadmin.bedunsetter:
+      description: Gives the ability to unset your bed
+      default: true
