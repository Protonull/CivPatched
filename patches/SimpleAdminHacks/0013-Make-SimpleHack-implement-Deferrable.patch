From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Alexander <protonull@protonmail.com>
Date: Wed, 24 May 2023 04:25:14 +0100
Subject: [PATCH] Make SimpleHack implement Deferrable


diff --git a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/SimpleHack.java b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/SimpleHack.java
index b489813fcd0d6bb162e799c2b3873509d3fd3912..cee98248eb58f7f3c34d6e4a904b46657829fd26 100644
--- a/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/SimpleHack.java
+++ b/src/main/java/com/programmerdan/minecraft/simpleadminhacks/framework/SimpleHack.java
@@ -18,6 +18,9 @@ import vg.civcraft.mc.civmodcore.utilities.CivLogger;
 // CivPatched Start
 import org.bukkit.event.HandlerList;
 import org.bukkit.event.Listener;
+import org.jetbrains.annotations.NotNull;
+import vg.civcraft.mc.civmodcore.utilities.defer.Deferrable;
+import vg.civcraft.mc.civmodcore.utilities.defer.DeferredFunctions;
 // CivPatched End
 
 /**
@@ -25,17 +28,19 @@ import org.bukkit.event.Listener;
  *
  * @author ProgrammerDan
  */
-public abstract class SimpleHack<T extends SimpleHackConfig> {
+public abstract class SimpleHack<T extends SimpleHackConfig> implements Deferrable { // CivPatched: Implement Deferrable
 
 	protected final CivLogger logger;
 	protected final SimpleAdminHacks plugin;
 	protected final T config;
 	private boolean enabled;
+	private final DeferredFunctions deferredFunctions; // CivPatched
 
 	public SimpleHack(final SimpleAdminHacks plugin, final T config) {
 		this.logger = CivLogger.getLogger(getClass());
 		this.plugin = Objects.requireNonNull(plugin, "Plugin cannot be null!");
 		this.config = Objects.requireNonNull(config, "Config cannot be null!");
+		this.deferredFunctions = new DeferredFunctions(plugin, this.logger); // CivPatched
 	}
 
 	public final SimpleAdminHacks plugin() {
@@ -46,6 +51,13 @@ public abstract class SimpleHack<T extends SimpleHackConfig> {
 		return this.config;
 	}
 
+	// CivPatched Start
+	@Override
+	public @NotNull DeferredFunctions getDeferredFunctions() {
+		return this.deferredFunctions;
+	}
+	// CivPatched End
+
 	public final String getName() {
 		return getClass().getSimpleName();
 	}
@@ -77,6 +89,7 @@ public abstract class SimpleHack<T extends SimpleHackConfig> {
 		unregisterCommands();
 		dataCleanup();
 		onDisable();
+		this.deferredFunctions.UNSAFE_run(); // CivPatched
 		this.config.setEnabled(false); // Needed for legacy hacks that rely on their config for current states
 		this.enabled = false;
 		this.plugin.info(ChatColor.AQUA + getName() + " disabled!");
